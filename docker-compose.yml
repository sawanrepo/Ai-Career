version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env  # ✅ Load backend .env
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy  # ✅ Ensure DB is ready before backend starts
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env  # ✅ Load frontend .env
    depends_on:
      backend:
        condition: service_started  # ✅ Ensures backend starts before frontend
    volumes:
      - ./frontend:/app
    restart: always  

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file:
      - ./.env  # ✅ Load database credentials from root .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # ✅ Ensures database is ready before backend starts
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  postgres_data:
